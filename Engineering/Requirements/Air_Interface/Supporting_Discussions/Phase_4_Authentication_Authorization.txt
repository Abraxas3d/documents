I’ve read some on tQSL. There are extensive planning docs from before ARRL accepted tQSL as the basis for LotW, but the docs on what it is today are either minimal or hard to find.

There is source code, though, which I haven’t looked at yet.

So far, it seems like all we get from tQSL is a way to verify identity by callsign. To get that we’ll have to walk the user through a process similar to setting up a log program to use LotW, I think, which is notoriously a pain for the computer-intimidated.

it is a pain, that is true. So we get authentication of some sort?

we get identity. ARRL has done the work of verifying that such a callsign exists and transmitting the private key (and signed certificate) to that legit license holder. Assuming the licensee has kept the secret secret, we can ask him to sign something and then the signed something will be trustworthy as coming from him. That’s all we get.

since we don’t have the certificate database (only ARRL does) the user would have to transmit the certificate to us (that’s a 5Kbyte file) as well as the signed whatever, at least initially.

I’m assuming that the ARRL’s CA public key is available somewhere, probably buried in the source code. We’d need that in order to verify the legitimacy of the certificate the user sent us.

So, this involves ARRL. It requires LOTW setup.

yes, if we adopt LotW certificates as the only acceptable proof of identity, then every P4 operator would have to register with LotW.

It could be one of multiple options, but we’d be hard pressed to set up anything better that really does verify the license-holder’s identity

all this is assuming we have a need to verify identity. I am not convinced that we do.

I am guessing this isn’t going to work with the stateless every-transmission-is-self-proving scheme, though. There is too much data in the certificate and too much calculation needed to verify it.

We could still use it at a central authorization server on the ground, I guess. With all that implies.

Um, disregard the 5K number above. The file I measured wasn’t the right kind of file.

ok one cert compresses to about 1K byte. Still pretty big. The 5K file contained several of them plus my encrypted private key.

**********

Authentication is the process of confirming a licensee's declared identity.

Authorization is the process of allowing particular identities access to particular resources. 

Groundsat is any equipment that serves as the payload for any Phase 4 Ground system. This includes but is not limited to a satellite payload, satellite simulator (Groundsat), or terrestrial hub. 

If the Groundsat has no state, then every frame has to speak for itself. Therefore, authentication and authorization are affected. 

Logbook of the World (LoTW) is an identity authentication application from ARRL. 

https://lotw.arrl.org

Within the United States, successful LoTW account establishment confirms that the address on file at the Federal Communications Commission (FCC) for an amateur radio licensee can receive and respond to information received at that postal address. That serves as the basis for licensee authentication. 

The address given to the FCC comes from the address that that license applicant submits on their form 605. The FCC does not validate this address. The FCC relies upon the volunteer examiner coordinator (VEC) to review the form 605 and ensure that the applicant has provided a mailing address in the United States. The applicant provides the address. The VEC is not required to independently confirm this mailing address. The applicant’s name on the form 605 must match the name on accepted forms of identification.

This is the limit of authentication provided to, and therefore by, the licensing authority. In the US, this is the FCC. 

There are two fundamental questions.

Does it make sense to exceed this level of authentication?

What sort of authentication and authorization is required of Phase 4 Ground radio traffic?

The default security implementation of Phase 4 Ground is the process described within this document. The Phase 4 Ground process must defer to a process selected by the Groundsat, if that security process selected by the Groundsat needs to claim priority. If there is a different process selected by the Groundsat, then a full specification must be provided to Phase 4 Ground as part of the Air Interface documentation. This serves as a “we can’t read your mind” clause. 

Phase 4B GEO 

Phase 4 Ground considers a process of authentication and authorization in this document. This process involves state in the Groundsat and in the Phase 4 Radio. 

The state in the Groundsat requires the following things.

1. Memory for a database. 
2. The ability to read from this database.
3. The ability to write to this database.
4. The ability to demand authentication from the Phase 4 Radio. 
5. The ability to do some processing using data received from uplink communication frames and information from the database.
6. 


The state in the Radio requires the following things. 

1. The ability to generate a token.
2. Memory to store the token.
3. Memory to store private key.
4. Memory to store a certificate.
5. Ability to sign a message containing the generated token with the private key. 
6. Ability to send the signed message plus the certificate to the Groundsat when it is demanded by the Groundsat.

The process is as follows. 

Operators that comply with the air interface can transmit through the satellite. Transmission requires a token. Phase 4 Ground radios generate a random token. This token is in each frame. 

The Groundsat stores the token, the claimed call sign, the claimed SSID associated with the call sign, and a time stamp. This is a tuple that forms the rows of a database. 

satellite time stamp : callsign : SSID : token

Unless and until there is cause for authentication, transmissions from stations are allowed. 

A request for authentication can be made to a particular row of the database, all rows that have a particular call sign, all call signs, or some other combination. 

In the case of a single row, this request for authentication would be addressed to the transmitter originating the transmissions associated with one particular (call sign : SSID). As is customary, a call sign can have several active SSIDs.  

Upon a request for authentication, the station or stations affected would generate a message. The message would contain a token. The token could be the same one generated to establish communications. The token could be a new one. Either way, the token is signed by the private key of that particular station. The station would send an authentication response message that consists of the signed token and the certificate associated with that call sign. (AI: what about SSID here? back off on SSID granularity or require a certificate for each SSID?)

If the authentication response is not received in a timely manner, the station is blacklisted. 

If the authentication response is received, the Groundsat checks that the certificate is valid by comparing with the root certificate (LoTW root certificate is through GoDaddy). If the certificate is not valid, the station is blacklisted.

If the certificate is valid, then the signature is checked. If the signature is not valid, the station is blacklisted.

If the signature checks out, then the row corresponding to the station in the Groundsat security database is updated. 

There are several reasons for launching an authorization request. This could be time-based (like Howie mentioned). Every hour, stations could be required to authorize. An agency that has an MOU with the Groundsat, and has influence over a ground control station, could request authorization. All stations, or some subset, may be required to authorize. Certain types of stations, such as “all stations that participated in Red Cross Drills within the past 9 months”, or “stations that support a throughput of greater than 500kbps” could be allowed. Others would be blacklisted. 

